1
00:00:01,000 --> 00:00:09,000
SDI applications are like MDI applications, just without the main form.

2
00:00:09,000 --> 00:00:19,000
So what would have been a child form in an MDI application becomes a top level form in an SDI application.

3
00:00:19,000 --> 00:00:26,000
SDI applications are single instance, meaning that once the program is running, if the user tries to start

4
00:00:26,000 --> 00:00:31,000
another instance of the program, all that happens is a new form is created in the running instance.

5
00:00:31,000 --> 00:00:39,000
Because of this, the program continues to run until the last form is closed.

6
00:00:39,000 --> 00:00:44,000
When building an SDI application using Visual Basic, we can get all this functionality just by properly

7
00:00:44,000 --> 00:00:48,000
configuring the application framework.

8
00:00:48,000 --> 00:00:56,000
When building an SDI application in C#, we can still use the application framework even though it's part of

9
00:00:56,000 --> 00:01:02,000
Visual Basic; we just don't get the Visual Studio integration that VB apps do, and we don't get the same kind

10
00:01:02,000 --> 00:01:10,000
of code generation. So in the C# application, we'll need to create a custom application object that inherits

11
00:01:10,000 --> 00:01:22,000
from WindowsFormsApplicationBase. The WindowsFormApplicationBase type is part of the Microsoft.VisualBasic assembly.

12
00:01:22,000 --> 00:01:28,000
Aside from the creation and/or configuration of the application object, building an SDI application is very

13
00:01:28,000 --> 00:59:00,000
similar to building an MDI application. We'll see this in the upcoming series of demos.

