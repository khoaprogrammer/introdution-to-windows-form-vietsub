1
00:00:01,000 --> 00:00:08,000
In this series of demos we'll take a look at the DataSources Window and the Drag-and-Drop data binding tools

2
00:00:08,000 --> 00:00:15,000
included in Visual Studio and Windows Forms. We'll see how the use of these tools automates much of what

3
00:00:15,000 --> 00:00:20,000
we've done in terms of data binding up to this point in the course.

4
00:00:20,000 --> 00:00:27,000
I'll be building two projects, one that uses LINQ to SQL, and one that uses type DataSets, so I can highlight

5
00:00:27,000 --> 00:00:35,000
the similarities and differences when using the data binding tools with these two different DataSources.

6
00:00:35,000 --> 00:00:41,000
In this demo we'll create the Visual Studio projects, and setup and configure the DataSources.

7
00:00:41,000 --> 00:00:48,000
So in this instance of Visual Studio, I'll choose File-New-Project, I'll create a Windows Forms Application,

8
00:00:48,000 --> 00:00:59,000
we'll call this LinqDragDrop, and click OK, and then we'll create our LINQ to SQL model in exactly the same

9
00:00:59,000 --> 00:01:07,000
way we did earlier in this module. So I'll right-click on the project, choose Add-New Item; in the Data

10
00:01:07,000 --> 00:01:20,000
section I'll choose LINQ to SQL classes, I'll name this Northwind, click Add, and then in my designer here,

11
00:01:20,000 --> 00:01:27,000
I'll drag and drop the Categories and Products table from the Data Connections in my Server Explorer.

12
00:01:27,000 --> 00:01:37,000
So here's my Northwind database, and I'm going to drag and drop Categories and Products.

13
00:01:37,000 --> 00:01:41,000
Alright, so that creates the model here in our LINQ to SQL project.

14
00:01:41,000 --> 00:01:50,000
Now let's come over to our DataSet project and create it, so File-New Project, Windows Forms, this will be

15
00:01:50,000 --> 00:02:04,000
DataSetDragDrop, and click OK, and then now I'll come over to the DataSources window here, and I'll pin it,

16
00:02:04,000 --> 00:02:12,000
and I'll choose Add New Data Source. It's going to ask us what DataSource type we're going to be using;

17
00:02:12,000 --> 00:02:21,000
I'm going to be getting data from a database, so I'll click Next; what kind of database model do I want to use?

18
00:02:21,000 --> 00:02:30,000
I want to use a DataSet, so click Next. Then it's asking me which data connection should the application use

19
00:02:30,000 --> 00:02:36,000
to connect to the database, and this is showing me the data connections out of the Server Explorer, which we

20
00:02:36,000 --> 00:02:44,000
just saw a moment ago. So this is the same connection we used when we created our LINQ to SQL model.

21
00:02:44,000 --> 00:02:51,000
So I'll click Next. It's now asking me if we want to store the connection string for the Northwind database

22
00:02:51,000 --> 00:02:57,000
in the settings for the application, and we do; this happened in our LINQ to SQL model, it just happened

23
00:02:57,000 --> 00:03:07,000
automatically, we weren't prompted, so I'll click Next. Visual Studio has now gone to our database and found

24
00:03:07,000 --> 00:03:13,000
the different objects in there; these are the same objects we saw in the Server Explorer, so I want to expand

25
00:03:13,000 --> 00:03:21,000
Tables and choose Categories and Products, just as we did in our LINQ to SQL model, and the DataSet name,

26
00:03:21,000 --> 00:03:32,000
NorthwindDataSet is just fine. I'll now click Finish to create the type DataSet.

27
00:03:32,000 --> 00:03:40,000
So over here in our DataSources window, we now have the Categories and Products tables shown; we'll see how

28
00:03:40,000 --> 00:03:43,000
we can use those in just a moment.

29
00:03:43,000 --> 00:03:52,000
And then over in our Solution Explorer, we see we now have NorthwindDataSet.xsd.

30
00:03:52,000 --> 00:03:59,000
So if I click on it and then choose to Show All Files, and then expand it, you'll see there's a file called

31
00:03:59,000 --> 00:04:09,000
NorthwindDataSet.Designer.vb or Designer.cs. So let's open that up and unpin DataSources, and then use

32
00:04:09,000 --> 00:04:19,000
Ctrl ? to bring up the Navigate To, and search for Products. So you'll see there's a class called

33
00:04:19,000 --> 00:04:25,000
ProductsDataTable, and there's also a class called ProductsTableAdapter.

34
00:04:25,000 --> 00:04:34,000
And if we search instead for Categories, you'll see the same thing, so there's CategoriesDataTable,

35
00:04:34,000 --> 00:04:41,000
CategoriesTableAdapter, there's also CategoriesRow, there was a ProductsRow; so these are the strongly type

36
00:04:41,000 --> 00:04:54,000
DataTable, DataAdapter, and DataRow classes that were generated by the wizard.

37
00:04:54,000 --> 00:05:05,000
And the definitions of these classes all exist here in this Designer.vb or Designer.cs file.

38
00:05:05,000 --> 00:05:11,000
Now getting back to the DataSources window and the Drag-and-Drop data binding tools, here in our type DataSet

39
00:05:11,000 --> 00:05:19,000
project, we've setup our DataSources window, let's do the same thing over here in our LINQ project.

40
00:05:19,000 --> 00:05:29,000
I'll save the model and close it, and then I'll go to DataSources and pin it, and I'll choose Add New Data Source,

41
00:05:29,000 --> 00:05:37,000
and in this case our DataSource is going to be our model, so I'll choose Object, and then click Next.

42
00:05:37,000 --> 00:05:43,000
Visual Studio is going to reflect on our project and show the types contained within, and we want the

43
00:05:43,000 --> 00:05:50,000
Category and Product objects that were generated as part of our LINQ to SQL model.

44
00:05:50,000 --> 00:05:58,000
And now I can click Finish, and now we have the Category and Product objects in our DataSources window.

45
00:05:58,000 --> 00:59:00,000
That concludes this demo. In the next demo we'll take a look at the basics of Drag-and-Drop data binding.

