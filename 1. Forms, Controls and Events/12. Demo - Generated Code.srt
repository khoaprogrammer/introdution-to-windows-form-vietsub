1
00:00:01,000 --> 00:00:12,000
Let's review the project we created in the last demo. We have a Form Designer, our Form Designer has the

2
00:00:12,000 --> 00:00:19,000
controls laid out on it. We set the control properties through the Properties Window, and then we added the

3
00:00:19,000 --> 00:00:27,000
event handler for the Click event for the ShowMessageButton over here in our form.

4
00:00:27,000 --> 00:00:34,000
Now when comparing the form class we have here to the one we had when we wrote this program using code only,

5
00:00:34,000 --> 00:00:41,000
the thing that's clearly missing is the declaration in setting the properties of all the controls.

6
00:00:41,000 --> 00:00:46,000
That code actually is in the form class, it's just hidden from you.

7
00:00:46,000 --> 00:00:56,000
So here we have MyForm.vb. Up in the Solution Explorer toolbar, there is an option to Show All Files,

8
00:00:56,000 --> 00:01:06,000
so I'll select that, and then I'll expand MyForm.vb, and you see we have this other file MyForm.Designer.vb.

9
00:01:06,000 --> 00:01:14,000
So if I open this up, notice that this is the declaration for a class or at least a partial class called MyForm.

10
00:01:14,000 --> 00:01:19,000
And then over here, we also have a declaration for a class called MyForm.

11
00:01:19,000 --> 00:01:27,000
This is called a partial class, where we have a single class definition that spans over multiple files;

12
00:01:27,000 --> 00:01:35,000
in this case it's two files. So, in this file, we have the code that's generated by the Designer, so every

13
00:01:35,000 --> 00:01:41,000
time we go and interact with the form, we add controls, we set control properties, we add event handlers,

14
00:01:41,000 --> 00:01:50,000
anything like that, the code in this file changes. And then we have our code, which is this over here.

15
00:01:50,000 --> 00:01:55,000
So there's a clean separation between generated code and our code.

16
00:01:55,000 --> 00:02:02,000
And if you come back over to the designer code here, and scroll down, one thing that's important is you see

17
00:02:02,000 --> 00:02:08,000
there's a comment here; we're not meant to edit this code in the designer file, and in fact that's one of

18
00:02:08,000 --> 00:02:15,000
the reasons why it's hidden from you by default. But down here in this method called InitializeComponent,

19
00:02:15,000 --> 00:02:21,000
we'll see we have the declarations for all our controls, so every time we add a control to the form or remove

20
00:02:21,000 --> 00:02:30,000
it, this code here will change. And notice that each of the controls is declared WithEvents.

21
00:02:30,000 --> 00:02:41,000
And then if we scroll up, we'll find where the controls get instantiated, and then down below here, we have

22
00:02:41,000 --> 00:02:50,000
the setting of the properties for each of the controls, and then down here we have where the controls are

23
00:02:50,000 --> 00:02:58,000
added to the controls collection of the form; and also we have the place where the properties of the form

24
00:02:58,000 --> 00:03:05,000
are set as well. Now, where does the InitializeComponent method get called?

25
00:03:05,000 --> 00:03:13,000
It actually gets called by the constructor of the form, even though you won't see that code anywhere inside of here.

26
00:03:13,000 --> 00:03:18,000
It's actually code that gets generated by Visual Studio, and it's hidden from you.

27
00:03:18,000 --> 00:03:29,000
But, if you go over to your part of the code, and add a constructor, you'll see that it adds in the call to

28
00:03:29,000 --> 00:03:34,000
InitializeComponent for you. So InitializeComponent has to be called by the constructor; if you don't

29
00:03:34,000 --> 00:03:49,000
explicitly do it, it will implicitly get done for you by the code generated by Visual Studio.

30
00:03:49,000 --> 00:03:57,000
If we come over to the C# project, here we can see we have the Designer, and we have our part of the code.

31
00:03:57,000 --> 00:04:02,000
Notice that in the C# version there is a constructor for you and it does call InitializeComponent,

32
00:04:02,000 --> 00:04:09,000
so instead of that being hidden from you, it's explicitly shown. Also, without having to go and Show All

33
00:04:09,000 --> 00:04:16,000
Files, if we expand the MyForm node, we'll see that it shows the Designer.cs file here.

34
00:04:16,000 --> 00:04:23,000
So again, in the C# version this is not hidden from you, but basically the code file works exactly the same thing;

35
00:04:23,000 --> 00:04:31,000
it's a partial definition of the MyForm class, here's the other part over here, the code that you write,

36
00:04:31,000 --> 00:04:47,000
and then in the InitializeComponent, which is in this region right here, we create the controls, we set the

37
00:04:47,000 --> 00:04:59,000
control properties, down here is where we attach the event handler, so again C# only has the dynamic event

38
00:04:59,000 --> 00:05:05,000
handling; VB uses the static and the Designer generates code that uses the static.

39
00:05:05,000 --> 00:05:13,000
And then down here is where we actually have the declaration of our different controls.

40
00:05:13,000 --> 00:05:20,000
Now what about the start-up code? So over here in our C# program, we have this file called Program.cs,

41
00:05:20,000 --> 00:05:29,000
and if we open it up we can see there is our static void Main, and here's where we're calling Application.Run,

42
00:05:29,000 --> 00:05:34,000
passing in a new instance of the form class. We also have a couple of the properties of the Application

43
00:05:34,000 --> 00:05:43,000
object being set here. Now, if we come back to the VB project, there is no program or start-up VB file.

44
00:05:43,000 --> 00:05:50,000
Again this code is being generated for you. So, if we go to the properties for the project by right-clicking

45
00:05:50,000 --> 00:05:58,000
on the project and choosing Properties, we'll see here in the Application tab, there's this Enable

46
00:05:58,000 --> 00:06:03,000
application framework, and then there's the application framework properties here.

47
00:06:03,000 --> 00:06:10,000
And when you modify these properties, you're configuring how the Application object gets generated.

48
00:06:10,000 --> 00:06:22,000
So again with the Show All Files on, if we expand My Project, there'll be a file in here called Application.myapp,

49
00:06:22,000 --> 00:06:32,000
And inside of here, there'll be a file Application.Designer.vb, and if we open that up, and then scroll down,

50
00:06:32,000 --> 00:06:39,000
we can see this declaration of this class called MyApplication. So instead of using the System.Windows.Forms

51
00:06:39,000 --> 00:06:47,000
Application object, the way that C# does and the way that we did in our code-only example, in Visual Basic,

52
00:06:47,000 --> 00:06:54,000
when you use the Windows Forms template, and have the application framework on, again that you Enable

53
00:06:54,000 --> 00:07:01,000
application framework, then this code will get generated for you, and it generates a custom application

54
00:07:01,000 --> 00:07:10,000
object that' used in your application. So effectively, this code is doing what this code does over here in

55
00:07:10,000 --> 00:07:19,000
this C# version. So building a Windows Forms application using the tooling provided by Visual Studio is more

56
00:07:19,000 --> 00:07:23,000
productive, but there's a lot stuff happening behind the scenes that may not be obvious to you.

57
00:07:23,000 --> 00:07:29,000
So hopefully starting out by building a project using code only, then building a project using the Designer,

58
00:07:29,000 --> 00:07:34,000
and then seeing where the Designer puts the code and how things all work together, makes this whole process

59
00:07:34,000 --> 00:59:00,000
a little bit clearer to you.

